openapi: 3.0.3
info:
  title: Devathon 8 API
  description: |-
    This API provides a comprehensive set of endpoints to manage 

    
  version: "1.0"

servers:
  - url: https://localhost:3000/api/v1
    description: Backend server
tags:
  - name: reindeers
    description: reindeer organizer
  - name: gps
    description: address gps
  
  
paths:
  
  /api/v1/reindeers:
    get:
      tags:
        - reindeers
      summary: Get reindees
      description: Retrieves all reindeers.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Reindeers"
        "400":
          description: Unauthorized
        "404":
          description: Reindeers not found
        "500":
          description: Internal server error
    post:
      tags:
        - reindeers
      summary: Create reindeer
      description: Creates a new reindeer.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                user:
                  $ref: "#/components/schemas/Reindeers"
              
     
      responses:
        "201":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  id:
                    type: string
        "400":
          description: Unauthorized
        "500":
          description: Internal server error
  /api/v1/reindeers/{name}:
    get:
        tags:
          - reindeers
        summary: Get reindeer by name
        description: Retrieves the reindeer.
        parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
        
        responses:
          200:
            description: Successful response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Reindeers'
          400:
            description: Unauthorized
          404:
            description: Reindeer not found
          500:
            description: Internal server error
  /api/v1/reindeers/{id}:
    put:
      tags:
        - reindeers
      summary: Update reindeer
      description: Updates the reindeer.
     
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                user:
                  $ref: "#/components/schemas/Reindeers"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  id:
                    type: string
        "400":
          description: Unauthorized
        "404":
          description: Reindeer not found
        "500":
          description: Internal server error
  
  /api/v1/weather:
    get:
      tags:
        - weather
      summary: Provides weather information and reindeer alignment depending on the weather
      description: retrieve weather and all reindeers
      responses:
        "200":
          description: Succesful response
          content: 
            application/json:
              schema: 
                type: array
                items:
                  $ref: "#/components/schemas/Weather"
                  
  /api/v1/calories/total:
    get:
      tags:
        - calories
      summary: Get total calories 
      description: returns all the calories consumed by Santa
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Calories"
        "400":
          description: Unauthorized
        "404":
          description: Calories not found
        "500":
          description: Internal server error
          
  /api/v1/gps/:
    get:
      tags:
        - gps
      summary: returns and saves the addresses consulted with the GPS
      description: Returns and saves the addresses consulted with the GPS by the front, returns a history of up to 5 saved addresses
      responses:
        "200":
          description: Successful response
          content:  
            application/json:
              schema:
                type: object
                properties:  
                  address:
                    type: array
                    items:
                      $ref: "#/components/schemas/Address"
        "400":
          description: Unauthorized
        "404":
          description: Address not found
        "500":
          description: Internal server error

    post:
      tags:
        - gps
      summary: save address
      description: save the normalized lowercase address in the database
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                  address:
                    type: string
                    description: the address string
                    example: "Wall Street"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    type: object
                    properties:
                      id:
                        type: string
                        description: The unique identifier for the address
                        example: "dd70c341-7105-4bc4-9dbf-e083f0fcb18a"
                      address:
                        type: string
                        description: The address string
                        example: "Wall Street"
                      created_at:
                        type: string
                        format: date-time
                        description: The date and time when the address was created
                        example: "2024-11-08T17:22:56.652Z"
                      updated_at:
                        type: string
                        format: date-time
                        description: The date and time when the address was last updated
                        example: "2024-11-08T17:22:56.652Z"
        "400":
          description: Unauthorized
        "404":
          description: Address not found
        "500":
          description: Internal server error
  /api/v1/gps/{id}:
    put:
      tags:
        - gps
      summary: Update an existing address
      description: Updates the address with the specified ID and returns the updated address object.
      parameters:
        - name: id
          in: path
          required: true
          description: The unique identifier for the address
          schema:
            type: string
            example: "dd70c341-7105-4bc4-9dbf-e083f0fcb18a"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                address:
                  type: string
                  description: The updated address string
                  example: "Wall Street"
      responses:
        "200":
          description: Address updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    type: object
                    properties:
                      id:
                        type: string
                        description: The unique identifier for the address
                        example: "dd70c341-7105-4bc4-9dbf-e083f0fcb18a"
                      address:
                        type: string
                        description: The updated address string
                        example: "Wall Street"
                      created_at:
                        type: string
                        format: date-time
                        description: The date and time when the address was created
                        example: "2024-11-08T17:22:56.652Z"
                      updated_at:
                        type: string
                        format: date-time
                        description: The date and time when the address was last updated
                        example: "2024-11-08T17:22:56.652Z"
        "400":
          description: Bad request
        "404":
          description: Address not found
        "500":
          description: Internal server error    
    delete:
      tags:
        - gps
      summary: Delete an existing address
      description: Deletes the address with the specified ID and returns a confirmation message.
      parameters:
        - name: id
          in: path
          required: true
          description: The unique identifier for the address to be deleted
          schema:
            type: string
            example: "dd70c341-7105-4bc4-9dbf-e083f0fcb18a"
      responses:
        "204":
          description: Address deleted successfully
        "400":
          description: Bad request
        "404":
          description: Address not found
        "500":
          description: Internal server error  
components:
  schemas:
    Reindeers:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the reindeer
        name:
          type: string
          minLength: 3
          maxLength: 30
          description: name reindeer
        alignment:
          type: integer
          description: reindeer position in santa's sleigh
    Weather:
      type: object
      properties:
        weather: 
          type: object
          description: Provides weather information
        reindeers: 
          type: object
          description: provides information on the reindeer lineup
    Calories:
      type: object
      properties:
        total:
          type: number
          description: total calories
    Address:
      type: object
      properties:
        id:
          type: string
        address:
          type: string
        created_at:
          type: string
        
          
          
        
        
    